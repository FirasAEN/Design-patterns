- D.P. Program to an interface not an implementation
- D.P. Strive for loosely coupled designs between objects that interact
- D.P. Favor composition over inheritance
- D.P. Identify the aspects of your application that vary and separate them from what stays the same





-The strategy pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it
-The observer pattern defines a one-to-many dependency between objects so that when one object changes state, all of its dependents are notified and updated automatically
